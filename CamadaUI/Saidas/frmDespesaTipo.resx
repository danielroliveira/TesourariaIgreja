<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="tspMenu.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnAtivo.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        HxEAAAAASUVORK5CYII=
</value>
  </data>
</root>